import os
import glob
import pandas as pd
from snakemake.utils import min_version

min_version('5.26.1')

configfile: '../config/hpcnode.yaml'

# Samples and chromosomes as list
SAMPLES = pd.read_table(config['samples'])['Sample'].tolist()
CHROMOSOMES = pd.read_table(config['chromosomes'], header=None).iloc[:,0].tolist()

# Reference genome
GFF_FILE = config['gff']

# Paths for output files
TMPDIR = config['temp_dir']
RAW_READ_DIR = config['raw_read_prefix']
REF_DIR = '{0}/ref'.format(config['results_prefix'])
TRIMMED_READ_DIR = '{0}/trimmed_reads'.format(config['results_prefix'])
QC_DIR = '{0}/qc'.format(config['results_prefix'])
SPECIES_ID_DIR = '{0}/species_id'.format(config['results_prefix'])
BAM_DIR = '{0}/bam'.format(config['results_prefix'])
FREEBAYES_DIR = '{0}/freebayes'.format(config['results_prefix'])
PROGRAM_RESOURCE_DIR = '{0}/program_resources'.format(config['results_prefix'])
ANGSD_DIR = '{0}/angsd'.format(config['results_prefix'])
NGSLD_DIR = '{0}/ngsld'.format(config['results_prefix'])
NGSRELATE_DIR = '{0}/ngsrelate'.format(config['results_prefix'])
POP_STRUC_DIR = '{0}/population_structure'.format(config['results_prefix'])
FIGURES_DIR = '{0}/figures'.format(config['results_prefix'])
HCN_LOCI_DIR = '{0}/hcn_loci'.format(config['results_prefix'])

# Parameters for initial PCA and relatedness analysis post-QC
LOWQUAL_SAMPLES_TO_EXCLUDE = config['lowQual_samples_to_exclude']

# Parameters for ngsRelate
POPS_MULTIPLE_INDS = config['pops_multi_ind']

# List with all samples to exclude based on QC and analysis of within-population relatedness
RELATED_SAMPLES_TO_EXCLUDE = config['related_samples_to_exclude']
ALL_SAMPLES_TO_EXCLUDE = LOWQUAL_SAMPLES_TO_EXCLUDE + RELATED_SAMPLES_TO_EXCLUDE

# Cluster
CORES_PER_NODE = config['cluster']['cores_per_node']

# Parameters for variant calling with ANGSD
ANGSD_MAX_DP = config['angsd']['max_dp']
ANGSD_MIN_DP_IND_SFS = config['angsd']['min_dp_ind_sfs']
ANGSD_MIN_DP_IND_GL = config['angsd']['min_dp_ind_gl']

# Parameters for genotype calling with freebayes
FREEBAYES_NCHUNKS = config['freebayes']['nchunks']
FREEBAYES_CHUNKS = list(range(1, FREEBAYES_NCHUNKS + 1))

# Parameters for Admixture analysis 
NGSADMIX_K = [x for x in range(2, 11)]
NGSADMIX_SEEDS = [x for x in range(1, 11)]

wildcard_constraints:
    chrom='|'.join([x for x in CHROMOSOMES])

localrules: create_tmp_dir, download_reference, unzip_reference, samtools_index_reference, clone_degeneracy, ref_done, create_bam_list_highQualSamples, create_bam_list_forSpeciesID, create_region_files_forFreebayes, freebayes_done, concat_angsd_stats, create_pos_file_for_ngsLD, concat_sfs, sum_sfs, convert_sites_for_angsd, split_angsd_sites_byChrom, angsd_index_sites, files_for_angsd_site_subset, subset_angsd_gl, subset_angsd_maf, extract_sample_angsd, extract_angsd_allSites, angsd_done, chloroplast_gene_fasta, index_chloroplast_gene_vcf, concat_fasta, logfile_for_clumpak, pop_structure_done, species_id_done, hcn_loci_done, bams_list_byPop_multiInd, convert_freq_forNGSrelate, ngsrelate_done, create_bam_list_allFinalSamples

include: 'rules/common.smk'

rule all:
   input:
        # Reference genome
        '{0}/ref.done'.format(REF_DIR),
        # Trimming, mapping, and QC
        '{0}/multiqc/multiqc_report.html'.format(QC_DIR),
        #'{0}/species_id.done'.format(SPECIES_ID_DIR), 
        # Freebayes
        '{0}/freebayes.done'.format(FREEBAYES_DIR),
        #'{0}/freebayes.done'.format(FREEBAYES_DIR),
        # Angsd
        '{0}/angsd.done'.format(ANGSD_DIR),
        # NGS relate
        #'{0}/ngsrelate.done'.format(NGSRELATE_DIR),
        # Population structure
        '{0}/population_structure.done'.format(POP_STRUC_DIR),
        # Param tests
        #'{0}/test_params/param_tests.done'.format(ANGSD_DIR)
        # HCN loci
        #'{0}/hnc_loci.done'.format(HCN_LOCI_DIR)
        # NGSLD
        #expand('{0}/pruned/{{chrom}}/{{chrom}}_withMaf{{maf}}_pruned.id'.format(NGSLD_DIR), chrom=CHROMOSOMES, maf=['0.05']),

rule create_tmp_dir:
    output: directory(TMPDIR)
    shell: 'mkdir {output}'

include: 'rules/ref.smk'
include: 'rules/trimming.smk'
include: 'rules/mapping.smk'
include: 'rules/qc.smk'
#include: 'rules/species_id.smk'
include: 'rules/angsd.smk'
include: 'rules/freebayes.smk'
#include: 'rules/param_tests.smk'
#include: 'rules/relatedness.smk'
include: 'rules/population_structure.smk'
#include: 'rules/hcn_loci.smk'
#include: 'rules/notebooks.smk'

rule clean:
    params:
        'logs {0} {1}/* {2} fastp.json'.format(config['results_prefix'], TRIMMED_READ_DIR, TMPDIR)
    shell:
        'rm -rfv {params}'
